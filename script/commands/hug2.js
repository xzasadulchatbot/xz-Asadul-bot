const fs = require("fs-extra");
const path = require("path");
const axios = require("axios");
const jimp = require("jimp");

module.exports.config = {
 name: "hug2",
 version: "3.1.2",
 hasPermssion: 0,
 credits: "Asadul",
 description: "hug frame generat",
 commandCategory: "img",
 usages: "[@mention]",
 cooldowns: 5
};

module.exports.onLoad = async () => {
 const dir = path.join(__dirname, "cache", "canvas");
 const filePath = path.join(dir, "hugv2.png");
 if (!fs.existsSync(dir)) fs.mkdirSync(dir, { recursive: true });
 if (!fs.existsSync(filePath)) {
 const imgURL = "https://i.ibb.co/zRdZJzG/1626342271-28-kartinkin-com-p-anime-obnimashki-v-posteli-anime-krasivo-30.jpg";
 const imgData = (await axios.get(imgURL, { responseType: "arraybuffer" })).data;
 fs.writeFileSync(filePath, Buffer.from(imgData));
 }
};

async function circle(imagePath) {
 const img = await jimp.read(imagePath);
 img.circle();
 return await img.getBufferAsync("image/png");
}

async function makeImage({ one, two }) {
 const dir = path.join(__dirname, "cache", "canvas");
 const bg = await jimp.read(path.join(dir, "hugv2.png"));
 const pathImg = path.join(dir, `hug2_${one}_${two}.png`);
 const avatarOnePath = path.join(dir, `avt_${one}.png`);
 const avatarTwoPath = path.join(dir, `avt_${two}.png`);

 const getAvatar = async (uid, filePath) => {
 const url = `https://graph.facebook.com/${uid}/picture?width=512&height=512&access_token=6628568379|c1e620fa708a1d5696fb991c1bde5662`;
 const avatarData = (await axios.get(url, { responseType: 'arraybuffer' })).data;
 fs.writeFileSync(filePath, Buffer.from(avatarData));
 };

 await getAvatar(one, avatarOnePath);
 await getAvatar(two, avatarTwoPath);

 const circleOne = await jimp.read(await circle(avatarOnePath));
 const circleTwo = await jimp.read(await circle(avatarTwoPath));

 bg.composite(circleOne.resize(100, 100), 370, 40)
 .composite(circleTwo.resize(100, 100), 330, 150);

 const finalBuffer = await bg.getBufferAsync("image/png");
 fs.writeFileSync(pathImg, finalBuffer);
 fs.unlinkSync(avatarOnePath);
 fs.unlinkSync(avatarTwoPath);

 return pathImg;
}

module.exports.run = async function ({ event, api }) {
 const { threadID, messageID, senderID, mentions } = event;
 const mention = Object.keys(mentions);
 if (!mention[0]) {
 return api.sendMessage("please mention 1 paeson!", threadID, messageID);
 }

 const one = senderID, two = mention[0];

 const captions = [
 "‡¶≠‡¶æ‡¶≤‡ßã‡¶¨‡¶æ‡¶∏‡¶æ ‡¶Ø‡¶¶‡¶ø ‡¶ï‡ßã‡¶®‡ßã ‡¶Ö‡¶®‡ßÅ‡¶≠‡ßÇ‡¶§‡¶ø ‡¶π‡¶Ø‡¶º, ‡¶§‡¶æ‡¶π‡¶≤‡ßá ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ ‡¶™‡ßç‡¶∞‡¶§‡¶ø ‡¶Ü‡¶Æ‡¶æ‡¶∞ ‡¶Ö‡¶®‡ßÅ‡¶≠‡ßÇ‡¶§‡¶ø ‡¶™‡ßÉ‡¶•‡¶ø‡¶¨‡ßÄ‡¶∞ ‡¶∏‡ßá‡¶∞‡¶æ ‡¶Ö‡¶®‡ßÅ‡¶≠‡ßÇ‡¶§‡¶ø!üå∫",
 "‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶Ü‡¶Æ‡¶æ‡¶∞ ‡¶ú‡ßÄ‡¶¨‡¶®‡ßá‡¶∞ ‡¶∏‡ßá‡¶∞‡¶æ ‡¶Ö‡¶ß‡ßç‡¶Ø‡¶æ‡¶Ø‡¶º, ‡¶Ø‡ßá‡¶á ‡¶Ö‡¶ß‡ßç‡¶Ø‡¶æ‡¶Ø‡¶º ‡¶¨‡¶æ‡¶∞‡¶¨‡¶æ‡¶∞ ‡¶™‡¶°‡¶º‡¶§‡ßá ‡¶á‡¶ö‡ßç‡¶õ‡ßá ‡¶ï‡¶∞‡ßá!üòò",
 "‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ ‡¶≠‡¶æ‡¶≤‡ßã‡¶¨‡¶æ‡¶∏‡¶æ‡¶∞ ‡¶Æ‡ßÇ‡¶≤‡ßç‡¶Ø ‡¶Ü‡¶Æ‡¶ø ‡¶ï‡¶ø‡¶≠‡¶æ‡¶¨‡ßá ‡¶¶‡ßá‡¶¨‡ßã, ‡¶§‡¶æ ‡¶Ü‡¶Æ‡¶æ‡¶∞ ‡¶ú‡¶æ‡¶®‡¶æ ‡¶®‡ßá‡¶á, ‡¶∂‡ßÅ‡¶ß‡ßÅ ‡¶ú‡¶æ‡¶®‡¶ø ‡¶™‡ßç‡¶∞‡¶•‡¶Æ ‡¶•‡ßá‡¶ï‡ßá ‡¶Ø‡ßá ‡¶≠‡¶æ‡¶¨‡ßá ‡¶≠‡¶æ‡¶≤‡ßã‡¶¨‡ßá‡¶∏‡ßá‡¶õ‡¶ø‡¶≤‡¶æ‡¶Æüíú ‡¶∏‡ßá‡¶≠‡¶æ‡¶¨‡ßá‡¶á ‡¶≠‡¶æ‡¶≤‡ßã‡¶¨‡ßá‡¶∏‡ßá ‡¶Ø‡¶æ‡¶¨‡ßã!ü´∂",
 "‡¶Ü‡¶Æ‡¶ø ‡¶™‡ßç‡¶∞‡ßá‡¶Æ‡ßá ‡¶™‡¶°‡¶º‡¶æ‡¶∞ ‡¶Ü‡¶ó‡ßá ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ ‡¶Æ‡¶æ‡¶Ø‡¶º‡¶æ‡¶Ø‡¶º ‡¶ú‡¶°‡¶º‡¶ø‡¶Ø‡¶º‡ßá ‡¶ó‡ßá‡¶õ‡¶ø, ‡¶Ø‡ßá ‡¶Æ‡¶æ‡¶Ø‡¶º‡¶æ ‡¶®‡ßá‡¶∂‡¶æ‡¶∞ ‡¶Æ‡¶§‡ßã, ‡¶Ü‡¶Æ‡¶ø ‡¶ö‡¶æ‡¶á‡¶≤‡ßá ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ ‡¶®‡ßá‡¶∂‡¶æ ‡¶ï‡¶æ‡¶ü‡¶ø‡¶Ø‡¶º‡ßá ‡¶â‡¶†‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡¶ø ‡¶®‡¶æ!üíû",
 "‡¶§‡ßã‡¶Æ‡¶æ‡¶ï‡ßá ‡¶ö‡ßá‡¶Ø‡¶º‡ßá‡¶õ‡¶ø‡¶≤‡¶æ‡¶Æ, ‡¶Ü‡¶∞ ‡¶§‡ßã‡¶Æ‡¶æ‡¶ï‡ßá‡¶á ‡¶ö‡¶æ‡¶á, ‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶Ü‡¶Æ‡¶æ‡¶∞ ‡¶≠‡¶æ‡¶≤‡ßã‡¶¨‡¶æ‡¶∏‡¶æüñ§ ‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶Ü‡¶Æ‡¶æ‡¶∞ ‡¶¨‡ßá‡¶Å‡¶ö‡ßá ‡¶•‡¶æ‡¶ï‡¶æ‡¶∞ ‡¶ï‡¶æ‡¶∞‡¶£!ü•∞",
 "‡¶Ü‡¶Æ‡¶æ‡¶∞ ‡¶ï‡¶æ‡¶õ‡ßá ‡¶§‡ßã‡¶Æ‡¶æ‡¶ï‡ßá ‡¶≠‡¶æ‡¶≤‡ßã‡¶¨‡¶æ‡¶∏‡¶æ‡¶∞ ‡¶ï‡ßã‡¶®‡ßã ‡¶∏‡¶Ç‡¶ú‡ßç‡¶û‡¶æ ‡¶®‡ßá‡¶á, ‡¶§‡ßã‡¶Æ‡¶æ‡¶ï‡ßá ‡¶≠‡¶æ‡¶≤‡ßã‡¶¨‡ßá‡¶∏‡ßá ‡¶Ø‡¶æ‡¶ì‡¶Ø‡¶º‡¶æ ‡¶π‡¶ö‡ßç‡¶õ‡ßá ‡¶Ü‡¶Æ‡¶æ‡¶∞ ‡¶®‡¶ø‡¶∂‡ßç‡¶ö‡ßÅ‡¶™ ‡¶Ö‡¶®‡ßÅ‡¶≠‡ßÇ‡¶§‡¶ø!üòç",
 "‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶Ü‡¶Æ‡¶æ‡¶∞ ‡¶ú‡ßÄ‡¶¨‡¶®‡ßá‡¶∞ ‡¶∏‡ßá‡¶á ‡¶ó‡¶≤‡ßç‡¶™, ‡¶Ø‡¶æ ‡¶™‡ßú‡¶§‡ßá ‡¶ó‡¶ø‡ßü‡ßá ‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶¨‡¶æ‡¶∞‡¶á ‡¶®‡¶§‡ßÅ‡¶® ‡¶ï‡¶ø‡¶õ‡ßÅ ‡¶Ü‡¶¨‡¶ø‡¶∑‡ßç‡¶ï‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶ø!üåª",
 "‡¶Ü‡¶Æ‡¶æ‡¶∞ ‡¶Æ‡¶®‡ßá‡¶∞ ‡¶ó‡¶π‡ßÄ‡¶®‡ßá ‡¶¨‡¶æ‡¶∏ ‡¶ï‡¶∞‡¶æ ‡¶∞‡¶æ‡¶ú‡¶ï‡¶®‡ßç‡¶Ø‡¶æ ‡¶§‡ßã‡¶Æ‡¶æ‡¶ï‡ßá ‡¶Ö‡¶®‡ßá‡¶ï ‡¶≠‡¶æ‡¶≤‡ßã‡¶¨‡¶æ‡¶∏‡¶ø‡•§‚ù§Ô∏è‚Äçü©π",
 "I feel complete in my life, ‡¶Ø‡¶ñ‡¶® ‡¶≠‡¶æ‡¶¨‡¶ø ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ ‡¶Æ‡¶§‡ßã ‡¶è‡¶ï‡¶ü‡¶æ ‡¶≤‡¶ï‡ßç‡¶∑‡ßç‡¶Æ‡ßÄ ‡¶Æ‡¶æ‡¶®‡ßÅ‡¶∑ ‡¶Ü‡¶Æ‡¶æ‡¶∞ ‡¶ú‡ßÄ‡¶¨‡¶® ‡¶∏‡¶ô‡ßç‡¶ó‡ßÄ!üå∫",
 "‡¶Ø‡ßá ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ ‡¶≠‡¶æ‡¶¨‡¶®‡¶æ‡¶∞ ‡¶∏‡¶æ‡¶•‡ßá ‡¶Æ‡¶ø‡¶≤‡ßá ‡¶Ø‡¶æ‡¶Ø‡¶º, ‡¶§‡¶æ‡¶ï‡ßá ‡¶ï‡¶ñ‡¶®‡ßã ‡¶õ‡ßá‡¶°‡¶º‡ßá ‡¶¶‡¶ø‡¶ì ‡¶®‡¶æ ü§ó ‡¶è‡¶Æ‡¶® ‡¶Æ‡¶æ‡¶®‡ßÅ‡¶∑ ‡¶∏‡¶¨‡¶æ‡¶∞ ‡¶ú‡ßÄ‡¶¨‡¶®‡ßá ‡¶Ü‡¶∏‡ßá ‡¶®‡¶æ!üòò",
 "‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ ‡¶è‡¶ï‡¶ü‡ßÅ‡¶ï‡¶∞‡ßã ‡¶≠‡¶æ‡¶≤‡ßã‡¶¨‡¶æ‡¶∏‡¶æ‡¶Ø‡¶º ‡¶Ü‡¶Æ‡¶ø ‡¶™‡ßÅ‡¶∞‡ßã‡¶ü‡¶æ ‡¶ú‡ßÄ‡¶¨‡¶® ‡¶ï‡ßá‡¶ü‡ßá ‡¶¶‡¶ø‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡¶ø!üíú",
 "‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ ‡¶π‡¶æ‡¶∏‡¶ø‡¶§‡ßá ‡¶Ø‡ßá‡¶® ‡¶Ü‡¶Æ‡¶æ‡¶∞ ‡¶™‡ßÉ‡¶•‡¶ø‡¶¨‡ßÄ ‡¶•‡ßá‡¶Æ‡ßá ‡¶Ø‡¶æ‡¶Ø‡¶º!üòä",
 "‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶∂‡ßÅ‡¶ß‡ßÅ ‡¶è‡¶ï‡¶ú‡¶® ‡¶Æ‡¶æ‡¶®‡ßÅ‡¶∑ ‡¶®‡¶ì, ‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶Ü‡¶Æ‡¶æ‡¶∞ ‡¶Ö‡¶®‡ßÅ‡¶≠‡¶¨, ‡¶Ü‡¶Æ‡¶æ‡¶∞ ‡¶Æ‡¶®!üñ§",
 "‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶Ü‡¶Æ‡¶æ‡¶∞ ‡¶∏‡¶¨‡¶ï‡¶ø‡¶õ‡ßÅ, ‡¶Ü‡¶Æ‡¶æ‡¶∞ ‡¶Ü‡¶ú, ‡¶Ü‡¶Æ‡¶æ‡¶∞ ‡¶Ü‡¶ó‡¶æ‡¶Æ‡ßÄ!‚ù§Ô∏è‚Äçüî•",
 "‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ ‡¶ö‡ßã‡¶ñ‡ßá ‡¶ö‡ßã‡¶ñ ‡¶∞‡¶æ‡¶ñ‡¶≤‡ßá‡¶á ‡¶∏‡¶¨ ‡¶¨‡ßç‡¶Ø‡¶•‡¶æ ‡¶≠‡ßÅ‡¶≤‡ßá ‡¶Ø‡¶æ‡¶á!üòò"
 ];

 const caption = captions[Math.floor(Math.random() * captions.length)];

 try {
 const imagePath = await makeImage({ one, two });
 return api.sendMessage({
 body: caption,
 attachment: fs.createReadStream(imagePath)
 }, threadID, () => fs.unlinkSync(imagePath), messageID);
 } catch (e) {
 console.error(e);
 return api.sendMessage("‚ùå ‡¶õ‡¶¨‡¶ø‡¶ü‡¶ø ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡¶§‡ßá ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá!", threadID, messageID);
 }
};
